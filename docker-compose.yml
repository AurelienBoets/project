version: "3.1"

networks:
  project:
    driver: bridge

volumes:
  mysql_data:
  mongo_data:
  product_data:

services:
  # Database
  sql:
    container_name: sql
    image: mysql
    restart: always
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: identity
    networks:
      - project
    volumes:
      - mysql_data:/var/lib/mysql
  
  sql-interface:
    image: phpmyadmin
    container_name: phpmyadmin
    ports:
      - 8090:80
    depends_on:
      - sql
    networks:
      - project
    environment:
        PMA_HOST: sql

  mongo:
    image: mongo
    restart: always
    ports:
      - 27018:27017
    networks:
      - project
  mongo-express:
    image: mongo-express
    restart: always
    networks:
      - project
    ports:
      - 8081:8081
    volumes:
      - mongo_data:/data/db
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
  
  # message broker
  rabbit:
    image: rabbitmq:3.13.4-management
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - project
  #Back
  identity:
    container_name: identity
    ports:
      - ${IDENTITY_PORT}:9000
    networks:
      - project
    environment:
      - DATABASE_HOST=sql
      - DATABASE_PORT=3306
      - DATABASE_NAME=identity
      - DATABASE_USERNAME=root
      - DATABASE_PASS=password
      - PORT=9000
    build:
      context: ./identity_provider
      dockerfile: .dockerfile
    depends_on:
      - sql

  aggregate:
    container_name: aggregate
    ports:
      - ${AGGREGATE_HTTP_PORT}:9001
    environment:
      - GRPC_PORT=${AGGREGATE_GRPC_PORT}
      - HTTP_PORT=9001
      - CATEGORY_PORT=${CATEGORY_GRPC_PORT}
      - CATEGORY_HOST=category
      - PRODUCT_HOST=product
      - PRODUCT_PORT=${PRODUCT_GRPC_PORT}
      - PLATFORM_HOST=platform
      - PLATFORM_PORT=${PLATFORM_GRPC_PORT}
      - PRICE_HOST=price
      - PRICE_PORT=${PRICE_GRPC_PORT}
      - RABBIT=rabbit
      - HOST=aggregate
    networks:
      - project
    build:
      context: ./aggregate_product
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - category

  gateway:
    container_name: gateway
    ports:
      - ${GATEWAY_PORT}:8080
    environment:
      - IDENTITY_URL=http://identity:9000
      - AGGREGATE_HOST=aggregate
      - ORDER_HOST=order
      - ORDER_PORT=${ORDER_GRPC_PORT}
      - PORT=8080
      - AGGREGATE_PORT=${AGGREGATE_GRPC_PORT}
      - RABBIT=rabbit
    networks:
      - project
    build:
      context: ./gateway
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - product
      - order
      - aggregate
  category:
    container_name: category
    ports:
      - ${CATEGORY_HTTP_PORT}:9002
    environment:
      - GRPC_PORT=${CATEGORY_GRPC_PORT}
      - HTTP_PORT=9002
      - DATABASE_HOST=mongo
      - RABBIT=rabbit
    networks:
      - project
    build:
      context: ./api_category
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - identity

  platform:
    container_name: platform
    ports:
      - ${PLATFORM_HTTP_PORT}:9003
    environment:
      - GRPC_PORT=${PLATFORM_GRPC_PORT}
      - HTTP_PORT=9003
      - DATABASE_HOST=mongo
      - RABBIT=rabbit
    networks:
      - project
    build:
      context: ./api_platform
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - identity

  product:
    container_name: product
    volumes:
      - product_data:/uploads
    ports:
      - ${PRODUCT_HTTP_PORT}:9004
    environment:
      - GRPC_PORT=${PRODUCT_GRPC_PORT}
      - HTTP_PORT=9004
      - DATABASE_HOST=mongo
    networks:
      - project
    build:
      context: ./api_product
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - platform
      - category
      - price

  price:
    container_name: price
    ports:
      - ${PRICE_HTTP_PORT}:9005
    environment:
      - GRPC_PORT=${PRICE_GRPC_PORT}
      - HTTP_PORT=9005
      - DATABASE_HOST=mongo
    networks:
      - project
    build:
      context: ./api_price
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - platform

  order:
    container_name: order
    ports:
      - ${ORDER_HTTP_PORT}:9006
    environment:
      - GRPC_PORT=${ORDER_GRPC_PORT}
      - HTTP_PORT=9006
      - DATABASE_HOST=mongo
      - CLIENT_PORT=${FRONTEND_PORT}
      - RABBIT=rabbit
    networks:
      - project
    build:
      context: ./api_order
      dockerfile: Dockerfile.native
    depends_on:
      - mongo
      - price
      - product
      

  # FRONT
  front:
    container_name: front
    ports:
      - ${FRONTEND_PORT}:80
    networks:
      - project
    build:
      context: ./microservice_front
      dockerfile: dockerfile
    depends_on:
      - order